deadlock: a situation in which a process is stuck in the waiting state waiting for a resource from another process which is also in a waiting state. 315
mutual exclusion: One of the four conditions that must hold simultaneously in a deadlock situation. At least one resource must be held in a nonsharable mode; that is, only one process at a time can use the resource. 319
hold and wait: One of the four conditions that must hold simultaneously in a deadlock situation. a process must be holding at least one resource and waiting to acquire additional resources that are currently being held by other processes. 319
no preemption: One of the four conditions that must hold simultaneously in a deadlock situation. resources cannot be preempted; that is, a resource can be released only volutarily by the process holding it, after that process has completed its task 319
circular wait: One of the four conditions that must hold simultaneously in a deadlock situation. a set {P0, P1, ..., Pn} of waiting processes must exist such that P0 is waiting for a resource held by P1, P1 is waiting for a resource held by P2, ..., Pn-1 is waiting for a resource held by Pn, and Pn is waiting for a resource held by P0. 319
safe state: a state in which the system can allocate resources to each process (up to its maximum) in some order and still avoid a deadlock. 328
safe sequence: a system is in a safe state only if there exists a ____ ____, in which for each Pi, the resource requests that Pi can still make can be satisfied by the currently available resources plus the resources held by all Pj, with j < i. 328
